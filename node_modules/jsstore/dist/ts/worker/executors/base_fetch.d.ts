import { Base } from "./base";
import { ISelectQuery } from "@/common";
import { WhereChecker } from "./where_checker";
import { executeWhereLogic } from "./select/where";
import { executeInLogic } from "./select/in";
import { executeRegexLogic } from "./select/regex";
export declare class BaseFetch extends Base {
    query: ISelectQuery;
    whereChecker: WhereChecker;
    executeWhereLogic: typeof executeWhereLogic;
    skipRecord: any;
    limitRecord: any;
    limitAtEnd: boolean;
    skipAtEnd: boolean;
    executeInLogic: typeof executeInLogic;
    executeRegexLogic: typeof executeRegexLogic;
    resultCount: number;
    protected shouldAddValue: (value: any) => boolean;
    protected goToWhereLogic(): Promise<any>;
}
