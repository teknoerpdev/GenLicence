import { LogHelper } from "./log_helper";
import { WebWorkerRequest, IDataBase, TMiddleware } from "../common";
import { EventBus } from "./event_bus";
export declare class ConnectionHelper {
    protected database: IDataBase;
    private worker_;
    private isConOpened_;
    private isDbIdle_;
    private requestQueue_;
    private isCodeExecuting_;
    private inactivityTimer_;
    protected middlewares: TMiddleware[];
    protected eventBus_: EventBus;
    private whiteListApi_;
    private queryManager;
    isWorker: boolean;
    protected logger: LogHelper;
    /**
     * injected by jsstore worker plugin
     *
     * @private
     * @memberof ConnectionHelper
     */
    private $worker;
    private get jsstoreWorker();
    constructor(worker?: Worker);
    private initQueryManager_;
    private onMessageFromWorker_;
    private processFinishedQuery_;
    private openDb_;
    private executeMiddleware_;
    private callResultMiddleware;
    protected pushApi<T>(request: WebWorkerRequest): Promise<T>;
    private prcoessExecutionOfQry_;
    private executeQry_;
    private sendRequestToWorker_;
}
